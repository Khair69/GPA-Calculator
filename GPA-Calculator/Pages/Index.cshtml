@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div>
    <p class="text-center fs-3" id="gpa-text">@Model.GPA</p>
    <!-- Table -->
    @if (!Model.Courses.Any())
    {
        <div class="alert alert-info">No items found.</div>
    }
    else
    {
        <!-- This is the container where Grid.js will render -->
        <div id="gridjs-wrapper"></div>

    }

    <!-- Add Course Section -->
    <div class="mt-4">
        <h2>Add New Course</h2>
        <partial name="/Pages/Courses/_AddCoursePartial.cshtml" model="Model.NewCourse" />
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            new gridjs.Grid({
                columns: [
                    { name: "Name", id: "courseName" },
                    { name: "Grade", id: "grade" },
                    { name: "Hours", id: "hours" },
                    { name: "Actions", id: "actions" }
                ],
                server: {
                    url: '/?handler=CourseData',
                    then: data => data.map(item => [
                        item.courseName,
                        item.grade,
                        item.hours,
                        gridjs.html(`<a asp-page="/Edit" asp-route-id="${item.id}" class="btn btn-outline-info me-1">Edit</a><a asp-page="/Delete" asp-route-id="${item.id}" class="btn btn-outline-danger ms-1">Delete</a>`)
                    ])
                },
                search: true,
                pagination: true,
                sort: true
            }).render(document.getElementById("gridjs-wrapper"));
        });
    </script>
    <script>
        // Get the element by its ID
        const gpaElement = document.getElementById('gpa-text');

        // Get the text content and convert it to a number
        const gpaValue = parseFloat(gpaElement.textContent);

        // Remove any existing color classes (optional, to prevent multiple classes)
        gpaElement.classList.remove('--bs-success-text-emphasis', '--bs-warning-text-emphasis', '--bs-danger-text-emphasis');

        // Add the appropriate class based on the GPA value
        if (gpaValue >= 3) {
            gpaElement.classList.add('text-success');
        } else if (gpaValue >= 2 && gpaValue < 3) {
            gpaElement.classList.add('text-warning');
        } else if (gpaValue < 2) {
            gpaElement.classList.add('text-danger');
        }
    </script>
    <partial name="_ValidationScriptsPartial" />
}