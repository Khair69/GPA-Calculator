@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div>

    <!-- Table -->
    @if (!Model.Courses.Any())
    {
        <div class="alert alert-info">No items found.</div>
    }
    else
    {
        <!-- This is the container where Grid.js will render -->
        <div id="gridjs-wrapper"></div>

    }

    <!-- Add Course Section -->
    <div class="mt-4">
        <h2>Add New Course</h2>
        <partial name="/Pages/Courses/_AddCoursePartial.cshtml" model="Model.NewCourse" />
    </div>

</div>

@section Scripts {

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            new gridjs.Grid({
                columns: [
                    { name: "Name", id: "courseName" },
                    { name: "Grade", id: "grade" },
                    { name: "Hours", id: "hours" }
                ],
                server: {
                    url: '/?handler=CourseData',
                    then: data => data.map(item => [
                        item.courseName,
                        item.grade,
                        item.hours
                    ])
                },
                search: true,
                pagination: true,
                sort: true
            }).render(document.getElementById("gridjs-wrapper"));
        });
    </script>
    <partial name="_ValidationScriptsPartial" />
}